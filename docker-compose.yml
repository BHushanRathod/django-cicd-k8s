version: "3"

services:
  django-cbv:
    build: .
    command: ["service"]
    environment:
      - DJANGO_SETTINGS_MODULE=django-cbv.settings
      - RDS_NAME=django-cbv
      - RDS_USER=django-cbv
      - RDS_PASSWORD=django-cbv
      - RDS_PORT=5432
    ports:
      - "8000:8000"
    tmpfs:
      - /tmp
      - /var/tmp
      - /code/.pytest_cache/
      - /code/Logs
    depends_on:
      - db
    restart: always

#  retrieval-daemon-service:
#    build: .
#    command: ["retrieval-daemon"]
#    environment:
#      - DJANGO_SETTINGS_MODULE=django-cbv.settings
#      - RDS_NAME=django-cbv
#      - RDS_USER=django-cbv
#      - RDS_PASSWORD=django-cbv
#      - RDS_PORT=5432
#    depends_on:
#      - db
#      - django-cbv
#    restart: always
#    read_only: false

  db:
    restart: always
    image: postgres:14.1-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=django-cbv
      - POSTGRES_USER=django-cbv
      - POSTGRES_PASSWORD=django-cbv

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
        - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CREATE_TOPICS: "tca-rule:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    depends_on:
      - zookeeper

  kafkadrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "broker:29092"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: root@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: root
    restart: always